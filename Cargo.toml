[package]
name = "mnist-wasm"
version = "0.1.0"
authors = ["Skeletonxf <skeletonxf@gmail.com>"]
edition = "2021"
categories = ["wasm"]
readme = "README.md"

[lib]
crate-type = ["cdylib"]

[profile.dev]
# fully optimise even in dev mode to ensure the number crunching is fast enough to use, otherwise the UI looks like it's hanging at times due to non release mode being so slow
# If you're using this template for something less mathematically intense, this would not be necessary or advised.
opt-level = 3

[package.metadata.wasm-pack.profile.release]
# Disabled due to issues with wasm-opt failing at the time of writing
# https://github.com/rustwasm/wasm-pack/issues?q=is%3Aissue%20state%3Aopen%20parse%20exception
# On my PC a full epoch training with Easy ML takes about 30 seconds which isn't any slower than prior
wasm-opt = false

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
easy-ml = "2.0"

# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.100"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
#wee_alloc = { version = "0.4.2", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.77"
features = [
  "console",
]

[dependencies.js-sys]
version = "0.3.77"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.50"
futures = "0.3.31"
js-sys = "0.3.77"
wasm-bindgen-futures = "0.4.50"
